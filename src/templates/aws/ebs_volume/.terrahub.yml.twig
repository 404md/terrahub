  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_ebs_volume:
        {{ name }}:
          availability_zone: '${var.{{ name }}_availability_zone}'
          # iops: 0
          # snapshot_id: ''
          # encrypted: false
          # kms_key_id: ''
          # size: 0
          # type: ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
    variable:
      {{ name }}_availability_zone:
        type: 'string'
    output:
      id:
        value: '${aws_ebs_volume.{{ name }}.id}'
      thub_id:
        value: '${aws_ebs_volume.{{ name }}.id}'
      arn:
        value: '${aws_ebs_volume.{{ name }}.arn}'
      iops:
        value: '${aws_ebs_volume.{{ name }}.iops}'
      snapshot_id:
        value: '${aws_ebs_volume.{{ name }}.snapshot_id}'
      encrypted:
        value: '${aws_ebs_volume.{{ name }}.encrypted}'
      kms_key_id:
        value: '${aws_ebs_volume.{{ name }}.kms_key_id}'
      size:
        value: '${aws_ebs_volume.{{ name }}.size}'
      type:
        value: '${aws_ebs_volume.{{ name }}.type}'

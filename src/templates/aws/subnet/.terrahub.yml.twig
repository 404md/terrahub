  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_subnet:
        {{ name }}:
          vpc_id: '${var.{{ name }}_vpc_id}'
          cidr_block: '${var.{{ name }}_cidr_block}'
          # assign_ipv6_address_on_creation: false
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # ipv6_cidr_block: ''
          # availability_zone_id: ''
          # map_public_ip_on_launch: false
          # availability_zone: ''
    variable:
      {{ name }}_vpc_id:
        type: 'string'
      {{ name }}_cidr_block:
        type: 'string'
    output:
      id:
        value: '${aws_subnet.{{ name }}.id}'
      thub_id:
        value: '${aws_subnet.{{ name }}.id}'
      arn:
        value: '${aws_subnet.{{ name }}.arn}'
      ipv6_cidr_block:
        value: '${aws_subnet.{{ name }}.ipv6_cidr_block}'
      availability_zone_id:
        value: '${aws_subnet.{{ name }}.availability_zone_id}'
      availability_zone:
        value: '${aws_subnet.{{ name }}.availability_zone}'
      ipv6_cidr_block_association_id:
        value: '${aws_subnet.{{ name }}.ipv6_cidr_block_association_id}'
      owner_id:
        value: '${aws_subnet.{{ name }}.owner_id}'

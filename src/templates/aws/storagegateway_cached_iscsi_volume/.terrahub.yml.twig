  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_storagegateway_cached_iscsi_volume:
        {{ name }}:
          target_name: '${var.{{ name }}_target_name}'
          volume_size_in_bytes: '${var.{{ name }}_volume_size_in_bytes}'
          gateway_arn: '${var.{{ name }}_gateway_arn}'
          network_interface_id: '${var.{{ name }}_network_interface_id}'
          # source_volume_arn: ''
          # snapshot_id: ''
    variable:
      {{ name }}_target_name:
        type: 'string'
      {{ name }}_volume_size_in_bytes:
        type: 'int'
      {{ name }}_gateway_arn:
        type: 'string'
      {{ name }}_network_interface_id:
        type: 'string'
    output:
      id:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.id}'
      thub_id:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.id}'
      target_arn:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.target_arn}'
      volume_arn:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.volume_arn}'
      arn:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.arn}'
      chap_enabled:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.chap_enabled}'
      lun_number:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.lun_number}'
      network_interface_port:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.network_interface_port}'
      volume_id:
        value: '${aws_storagegateway_cached_iscsi_volume.{{ name }}.volume_id}'

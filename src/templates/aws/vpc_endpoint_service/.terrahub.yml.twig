  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_vpc_endpoint_service:
        {{ name }}:
          acceptance_required: '${var.{{ name }}_acceptance_required}'
          network_load_balancer_arns: '${var.{{ name }}_network_load_balancer_arns}'
          # allowed_principals: []
    variable:
      {{ name }}_acceptance_required:
        type: 'bool'
      {{ name }}_network_load_balancer_arns:
        type: 'set'
    output:
      id:
        value: '${aws_vpc_endpoint_service.{{ name }}.id}'
      thub_id:
        value: '${aws_vpc_endpoint_service.{{ name }}.id}'
      availability_zones:
        value: '${aws_vpc_endpoint_service.{{ name }}.availability_zones}'
      private_dns_name:
        value: '${aws_vpc_endpoint_service.{{ name }}.private_dns_name}'
      base_endpoint_dns_names:
        value: '${aws_vpc_endpoint_service.{{ name }}.base_endpoint_dns_names}'
      service_name:
        value: '${aws_vpc_endpoint_service.{{ name }}.service_name}'
      service_type:
        value: '${aws_vpc_endpoint_service.{{ name }}.service_type}'
      allowed_principals:
        value: '${aws_vpc_endpoint_service.{{ name }}.allowed_principals}'
      state:
        value: '${aws_vpc_endpoint_service.{{ name }}.state}'

  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_vpc_endpoint:
        {{ name }}:
          service_name: '${var.{{ name }}_service_name}'
          vpc_id: '${var.{{ name }}_vpc_id}'
          # auto_accept: false
          # route_table_ids: []
          # security_group_ids: []
          # private_dns_enabled: false
          # vpc_endpoint_type: ''
          # policy: ''
          # subnet_ids: []
    variable:
      {{ name }}_service_name:
        type: 'string'
      {{ name }}_vpc_id:
        type: 'string'
    output:
      id:
        value: '${aws_vpc_endpoint.{{ name }}.id}'
      thub_id:
        value: '${aws_vpc_endpoint.{{ name }}.id}'
      route_table_ids:
        value: '${aws_vpc_endpoint.{{ name }}.route_table_ids}'
      security_group_ids:
        value: '${aws_vpc_endpoint.{{ name }}.security_group_ids}'
      state:
        value: '${aws_vpc_endpoint.{{ name }}.state}'
      cidr_blocks:
        value: '${aws_vpc_endpoint.{{ name }}.cidr_blocks}'
      dns_entry:
        value: '${aws_vpc_endpoint.{{ name }}.dns_entry}'
      policy:
        value: '${aws_vpc_endpoint.{{ name }}.policy}'
      prefix_list_id:
        value: '${aws_vpc_endpoint.{{ name }}.prefix_list_id}'
      subnet_ids:
        value: '${aws_vpc_endpoint.{{ name }}.subnet_ids}'
      network_interface_ids:
        value: '${aws_vpc_endpoint.{{ name }}.network_interface_ids}'

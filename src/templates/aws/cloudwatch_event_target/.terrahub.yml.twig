  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_cloudwatch_event_target:
        {{ name }}:
          rule: '${var.{{ name }}_rule}'
          arn: '${var.{{ name }}_arn}'
          # target_id: ''
          # input_path: ''
          # sqs_target:
          #   -
          #     message_group_id: ''
          # input: ''
          # role_arn: ''
          # run_command_targets:
          #   -
          #     key: ''
          #     values: []
          # ecs_target:
          #   -
          #     group: ''
          #     launch_type: ''
          #     network_configuration:
          #       -
          #         subnets: []
          #         assign_public_ip: false
          #         security_groups:
          # batch_target:
          #   -
          #     job_definition: ''
          #     job_name: ''
          #     array_size: 0
          #     job_attempts: 0
          # kinesis_target:
          #   -
          #     partition_key_path: ''
          # input_transformer:
          #   -
          #     input_template: ''
          #     input_paths:
          #       '[TO_BE_REPLACED]': ''
    variable:
      {{ name }}_rule:
        type: 'string'
      {{ name }}_arn:
        type: 'string'
    output:
      id:
        value: '${aws_cloudwatch_event_target.{{ name }}.id}'
      thub_id:
        value: '${aws_cloudwatch_event_target.{{ name }}.id}'
      target_id:
        value: '${aws_cloudwatch_event_target.{{ name }}.target_id}'

data "aws_vpc" "selected" {
  tags {
    Name = "${var.env} ${local.region} ${var.security_group_vpc_name}"
  }
}

data "aws_region" "current" {
  current = true
}

data "aws_security_group" "security_group_vpc" {
  vpc_id = "${data.aws_vpc.selected.id}"

  filter {
    name   = "group-name"
    values = ["${replace(data.aws_vpc.selected.id, "vpc-", "VPC_")}"]
  }
}

data "terraform_remote_state" "sg" {
  backend = "s3"

  config {
    bucket         = "prod-shared-services-vpc-terraform-state"
    key            = "shared_services_vpc/infra/steam/{{ code }}/terraform.tfstate"
    region         = "us-east-1"
    encrypt        = true
  }
}

data "terraform_remote_state" "iam" {
  backend = "s3"

  config {
    bucket         = "prod-shared-services-vpc-terraform-state"
    key            = "shared_services_vpc/infra/steam/iam/terraform.tfstate"
    region         = "us-east-1"
    encrypt        = true
  }
}

data "template_file" "user_data" {
  template = <<EOF
export INSTANCE_ENVIRONMENT=$${cloud_environment}
export CLOUD_APP=$${cloud_app_name}
export CLOUD_DOMAIN=$${cloud_domain}
export EC2_REGION=$${region}
export CLOUD_PROD_PHASE=$${prod_phase}
export CLOUD_STACK=$${stack}
EOF

  vars {
    cloud_environment = "${var.env}"
    cloud_app_name    = "${var.launch_configuration_name_prefix}${var.launch_configuration_name}-${var.region}"
    cloud_domain      = "${var.cloud_domain}"
    region            = "${var.region}"
    prod_phase        = "${var.prod_phase}"
    stack             = "${var.stack}"
  }
}
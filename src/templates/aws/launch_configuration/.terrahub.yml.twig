  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_launch_configuration:
        {{ name }}:
          instance_type: '${var.{{ name }}_instance_type}'
          image_id: '${var.{{ name }}_image_id}'
          # ephemeral_block_device: 
          #   device_name:''
          #   virtual_name:''
          # associate_public_ip_address: false
          # user_data: ''
          # user_data_base64: ''
          # security_groups: []
          # vpc_classic_link_id: ''
          # placement_tenancy: ''
          # ebs_block_device: 
          #   device_name:''
          #   snapshot_id:''
          #   volume_size:0
          #   volume_type:''
          #   encrypted:false
          #   delete_on_termination:false
          #   no_device:false
          #   iops:0
          # name_prefix: ''
          # key_name: ''
          # ebs_optimized: false
          # enable_monitoring: false
          # root_block_device: 
          #   -
          #     delete_on_termination: false
          #     iops: 0
          #     volume_size: 0
          #     volume_type: ''
          # iam_instance_profile: ''
          # vpc_classic_link_security_groups: []
          # spot_price: ''
          # name: ''
    variable:
      {{ name }}_instance_type:
        type: 'string'
      {{ name }}_image_id:
        type: 'string'
    output:
      id:
        value: '${aws_launch_configuration.{{ name }}.id}'
      thub_id:
        value: '${aws_launch_configuration.{{ name }}.id}'
      ebs_block_device:
        value: '${aws_launch_configuration.{{ name }}.ebs_block_device}'
      key_name:
        value: '${aws_launch_configuration.{{ name }}.key_name}'
      ebs_optimized:
        value: '${aws_launch_configuration.{{ name }}.ebs_optimized}'
      root_block_device:
        value: '${aws_launch_configuration.{{ name }}.root_block_device}'
      name:
        value: '${aws_launch_configuration.{{ name }}.name}'

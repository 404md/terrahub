  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_security_group:
        {{ name }}:
          # ingress:
          #   protocol: ''
          #   to_port: 0
          #   from_port: 0
          #   security_groups:
          #   description: ''
          #   cidr_blocks:
          #     -
          #   ipv6_cidr_blocks:
          #     -
          #   prefix_list_ids:
          #     -
          #   self: false
          # egress:
          #   protocol: ''
          #   from_port: 0
          #   to_port: 0
          #   description: ''
          #   cidr_blocks:
          #     -
          #   ipv6_cidr_blocks:
          #     -
          #   prefix_list_ids:
          #     -
          #   security_groups:
          #   self: false
          # tags:
          #   '[TO_BE_REPLACED]': ''
          # revoke_rules_on_delete: false
          # name: ''
          # name_prefix: ''
          # description: ''
          # vpc_id: ''
    output:
      id:
        value: '${aws_security_group.{{ name }}.id}'
      thub_id:
        value: '${aws_security_group.{{ name }}.id}'
      ingress:
        value: '${aws_security_group.{{ name }}.ingress}'
      egress:
        value: '${aws_security_group.{{ name }}.egress}'
      owner_id:
        value: '${aws_security_group.{{ name }}.owner_id}'
      name:
        value: '${aws_security_group.{{ name }}.name}'
      vpc_id:
        value: '${aws_security_group.{{ name }}.vpc_id}'
      arn:
        value: '${aws_security_group.{{ name }}.arn}'

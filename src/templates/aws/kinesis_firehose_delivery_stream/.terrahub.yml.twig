  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_kinesis_firehose_delivery_stream:
        {{ name }}:
          schema_configuration: 
            -
              role_arn: ''
              table_name: ''
              database_name: ''
          #     version_id: ''
          #     catalog_id: ''
          #     region: ''
          role_arn: '${var.{{ name }}_role_arn}'
          name: '${var.{{ name }}_name}'
          destination: '${var.{{ name }}_destination}'
          output_format_configuration: 
            -
              serializer: 
                -
          #         orc_ser_de: 
          #           -
          #             block_size_bytes: 0
          #             dictionary_key_threshold: ''
          #             enable_padding: false
          #             padding_tolerance: ''
          #             row_index_stride: 0
          #             stripe_size_bytes: 0
          #             bloom_filter_columns: 
          #               -
          #             bloom_filter_false_positive_probability: ''
          #             compression: ''
          #             format_version: ''
          # splunk_configuration: 
          #   -
          #     hec_token: ''
          #     hec_endpoint: ''
          #     hec_endpoint_type: ''
          #     s3_backup_mode: ''
          #     retry_duration: 0
          #     hec_acknowledgment_timeout: 0
          # destination_id: ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # prefix: ''
          # redshift_configuration: 
          #   -
          #     role_arn: ''
          #     data_table_name: ''
          #     cluster_jdbcurl: ''
          #     username: ''
          #     password: ''
          #     copy_options: ''
          #     data_table_columns: ''
          #     retry_duration: 0
          #     s3_backup_mode: ''
          # error_output_prefix: ''
          # kms_key_arn: ''
          # elasticsearch_configuration: 
          #   -
          #     domain_arn: ''
          #     role_arn: ''
          #     index_name: ''
          #     s3_backup_mode: ''
          #     type_name: ''
          #     buffering_interval: 0
          #     buffering_size: 0
          #     retry_duration: 0
          #     index_rotation_period: ''
          # version_id: ''
          # extended_s3_configuration: 
          #   -
          #     bucket_arn: ''
          #     buffer_interval: 0
          #     compression_format: ''
          #     data_format_conversion_configuration: 
          #       -
          #         input_format_configuration: 
          #           -
          #             deserializer: 
          #               -
          #                 hive_json_ser_de: 
          #                   -
          #                     timestamp_formats: 
          #                       -
          #         enabled: false
          #     buffer_size: 0
          # s3_backup_mode: ''
          # arn: ''
          # kinesis_source_configuration: 
          #   -
          #     kinesis_stream_arn: ''
          #     role_arn: ''
    variable:
      {{ name }}_role_arn:
        type: 'string'
      {{ name }}_name:
        type: 'string'
      {{ name }}_destination:
        type: 'string'
    output:
      id:
        value: '${aws_kinesis_firehose_delivery_stream.{{ name }}.id}'
      thub_id:
        value: '${aws_kinesis_firehose_delivery_stream.{{ name }}.id}'
      destination_id:
        value: '${aws_kinesis_firehose_delivery_stream.{{ name }}.destination_id}'
      version_id:
        value: '${aws_kinesis_firehose_delivery_stream.{{ name }}.version_id}'
      arn:
        value: '${aws_kinesis_firehose_delivery_stream.{{ name }}.arn}'

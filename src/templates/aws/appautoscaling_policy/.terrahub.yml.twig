  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_appautoscaling_policy:
        {{ name }}:
          scalable_dimension: '${var.{{ name }}_scalable_dimension}'
          target_value: '${var.{{ name }}_target_value}'
          resource_id: '${var.{{ name }}_resource_id}'
          service_namespace: '${var.{{ name }}_service_namespace}'
          name: '${var.{{ name }}_name}'
          # step_scaling_policy_configuration: 
          #   -
          #     cooldown: 0
          #     metric_aggregation_type: ''
          #     min_adjustment_magnitude: 0
          #     step_adjustment: 
          #     scaling_adjustment: 0
          #     metric_interval_upper_bound: ''
          #     metric_interval_lower_bound: ''
          #     adjustment_type: ''
          # target_tracking_scaling_policy_configuration: 
          #   -
          #     customized_metric_specification: 
          #       -
          #         dimensions: 
          #       name: ''
          #       value: ''
          # metric_aggregation_type: ''
          # min_adjustment_magnitude: 0
          # scale_in_cooldown: 0
          # scale_out_cooldown: 0
          # policy_type: ''
          # alarms: []
          # adjustment_type: ''
          # predefined_metric_specification: 
          #   -
          #     predefined_metric_type: ''
          #     resource_label: ''
          # step_adjustment: []
          # cooldown: 0
    variable:
      {{ name }}_scalable_dimension:
        type: 'string'
      {{ name }}_target_value:
        type: 'float'
      {{ name }}_resource_id:
        type: 'string'
      {{ name }}_service_namespace:
        type: 'string'
      {{ name }}_name:
        type: 'string'
    output:
      id:
        value: '${aws_appautoscaling_policy.{{ name }}.id}'
      thub_id:
        value: '${aws_appautoscaling_policy.{{ name }}.id}'
      arn:
        value: '${aws_appautoscaling_policy.{{ name }}.arn}'

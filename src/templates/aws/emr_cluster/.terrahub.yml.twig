  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_emr_cluster:
        {{ name }}:
          service_role: '${var.{{ name }}_service_role}'
          release_label: '${var.{{ name }}_release_label}'
          name: '${var.{{ name }}_name}'
          # autoscaling_role: ''
          # ec2_attributes: 
          #   -
          #     instance_profile: ''
          #     emr_managed_slave_security_group: ''
          #     service_access_security_group: ''
          #     key_name: ''
          #     subnet_id: ''
          #     additional_master_security_groups: ''
          #     additional_slave_security_groups: ''
          #     emr_managed_master_security_group: ''
          # security_configuration: ''
          # custom_ami_id: ''
          # core_instance_type: ''
          # termination_protection: false
          # instance_group: 
          #   bid_price: ''
          #   ebs_config: 
          #     size: 0
          #     type: ''
          #     iops: 0
          #     volumes_per_instance: 0
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # scale_down_behavior: ''
          # applications: []
          # keep_job_flow_alive_when_no_steps: false
          # configurations_json: ''
          # ebs_root_volume_size: 0
          # additional_info: ''
          # bootstrap_action: 
          #   name: ''
          #   path: ''
          #   args: 
          #     -
          # configurations: ''
          # log_uri: ''
          # core_instance_count: 0
          # visible_to_all_users: false
          # kerberos_attributes: 
          #   -
          #     kdc_admin_password: ''
          #     realm: ''
          #     ad_domain_join_user: ''
          #     cross_realm_trust_principal_password: ''
          #     ad_domain_join_password: ''
          # step: 
          #   -
          #     action_on_failure: ''
          #     hadoop_jar_step: 
          #       -
          #         jar: ''
          #         main_class: ''
          #         properties: 
          #           '[TO_BE_REPLACED]': ''
          #         args: 
          #           -
          # master_instance_type: ''
    variable:
      {{ name }}_service_role:
        type: 'string'
      {{ name }}_release_label:
        type: 'string'
      {{ name }}_name:
        type: 'string'
    output:
      id:
        value: '${aws_emr_cluster.{{ name }}.id}'
      thub_id:
        value: '${aws_emr_cluster.{{ name }}.id}'
      cluster_state:
        value: '${aws_emr_cluster.{{ name }}.cluster_state}'
      core_instance_type:
        value: '${aws_emr_cluster.{{ name }}.core_instance_type}'
      termination_protection:
        value: '${aws_emr_cluster.{{ name }}.termination_protection}'
      master_public_dns:
        value: '${aws_emr_cluster.{{ name }}.master_public_dns}'
      instance_group:
        value: '${aws_emr_cluster.{{ name }}.instance_group}'
      scale_down_behavior:
        value: '${aws_emr_cluster.{{ name }}.scale_down_behavior}'
      keep_job_flow_alive_when_no_steps:
        value: '${aws_emr_cluster.{{ name }}.keep_job_flow_alive_when_no_steps}'
      step:
        value: '${aws_emr_cluster.{{ name }}.step}'
      master_instance_type:
        value: '${aws_emr_cluster.{{ name }}.master_instance_type}'

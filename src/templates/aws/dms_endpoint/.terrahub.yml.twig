  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_dms_endpoint:
        {{ name }}:
          endpoint_id: '${var.{{ name }}_endpoint_id}'
          endpoint_type: '${var.{{ name }}_endpoint_type}'
          engine_name: '${var.{{ name }}_engine_name}'
          # extra_connection_attributes: ''
          # kms_key_arn: ''
          # port: 0
          # server_name: ''
          # username: ''
          # database_name: ''
          # service_access_role: ''
          # s3_settings: 
          #   -
          #     bucket_name: ''
          #     compression_type: ''
          #     service_access_role_arn: ''
          #     external_table_definition: ''
          #     csv_row_delimiter: ''
          #     csv_delimiter: ''
          #     bucket_folder: ''
          # ssl_mode: ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # mongodb_settings: 
          #   -
          #     auth_type: ''
          #     auth_mechanism: ''
          #     nesting_level: ''
          #     extract_doc_id: ''
          #     docs_to_investigate: ''
          #     auth_source: ''
          # certificate_arn: ''
          # password: ''
    variable:
      {{ name }}_endpoint_id:
        type: 'string'
      {{ name }}_endpoint_type:
        type: 'string'
      {{ name }}_engine_name:
        type: 'string'
    output:
      id:
        value: '${aws_dms_endpoint.{{ name }}.id}'
      thub_id:
        value: '${aws_dms_endpoint.{{ name }}.id}'
      extra_connection_attributes:
        value: '${aws_dms_endpoint.{{ name }}.extra_connection_attributes}'
      kms_key_arn:
        value: '${aws_dms_endpoint.{{ name }}.kms_key_arn}'
      endpoint_arn:
        value: '${aws_dms_endpoint.{{ name }}.endpoint_arn}'
      ssl_mode:
        value: '${aws_dms_endpoint.{{ name }}.ssl_mode}'
      certificate_arn:
        value: '${aws_dms_endpoint.{{ name }}.certificate_arn}'

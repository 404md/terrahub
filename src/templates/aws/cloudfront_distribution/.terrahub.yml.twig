  template:
    # terraform:
    #   backend:
    #     s3:
    #     key: 'path/to/terraform.tfstate'
    resource:
      aws_cloudfront_distribution:
        {{ name }}:
          viewer_protocol_policy: '${var.{{ name }}_viewer_protocol_policy}'
          origin:
          #   custom_origin_config:
          #     origin_protocol_policy:''
          #     origin_ssl_protocols:[]
          #     http_port:0
          #     https_port:0
          #     origin_keepalive_timeout:0
          #     origin_read_timeout:0
          restrictions:
            geo_restriction:
              restriction_type:''
          #     locations:
          #       -
          viewer_certificate:
          #   acm_certificate_arn:''
          #   cloudfront_default_certificate:false
          #   iam_certificate_id:''
          #   minimum_protocol_version:''
          #   ssl_support_method:''
          target_origin_id: '${var.{{ name }}_target_origin_id}'
          origin_id: '${var.{{ name }}_origin_id}'
          enabled: '${var.{{ name }}_enabled}'
          path_pattern: '${var.{{ name }}_path_pattern}'
          default_cache_behavior:
            forwarded_values:
              cookies:
                forward:''
          #       whitelisted_names:
          #         -
            allowed_methods:[]
            cached_methods:[]
          #   field_level_encryption_id:''
          #   compress:false
          #   default_ttl:0
          # retain_on_delete: false
          # is_ipv6_enabled: false
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # min_ttl: 0
          # default_root_object: ''
          # http_version: ''
          # smooth_streaming: false
          # origin_path: ''
          # logging_config: 
          #   bucket:''
          #   include_cookies:false
          #   prefix:''
          # s3_origin_config: 
          #   origin_access_identity:''
          # price_class: ''
          # aliases: []
          # cache_behavior: []
          # ordered_cache_behavior: 
          #   -
          #     allowed_methods: []
          #     cached_methods: []
          #     forwarded_values: 
          #     cookies:
          #       forward:''
          #       whitelisted_names:
          #         -
          #     compress: false
          #     default_ttl: 0
          #     field_level_encryption_id: ''
          # lambda_function_association: 
          #   lambda_arn:''
          #   event_type:''
          #   include_body:false
          # trusted_signers: []
          # web_acl_id: ''
          # max_ttl: 0
          # comment: ''
          # custom_error_response: 
          #   error_code:0
          #   error_caching_min_ttl:0
          #   response_code:0
          #   response_page_path:''
    variable:
      {{ name }}_viewer_protocol_policy:
        type: 'string'
      {{ name }}_target_origin_id:
        type: 'string'
      {{ name }}_origin_id:
        type: 'string'
      {{ name }}_enabled:
        type: 'bool'
      {{ name }}_path_pattern:
        type: 'string'
    output:
      id:
        value: '${aws_cloudfront_distribution.{{ name }}.id}'
      thub_id:
        value: '${aws_cloudfront_distribution.{{ name }}.id}'
      last_modified_time:
        value: '${aws_cloudfront_distribution.{{ name }}.last_modified_time}'
      etag:
        value: '${aws_cloudfront_distribution.{{ name }}.etag}'
      caller_reference:
        value: '${aws_cloudfront_distribution.{{ name }}.caller_reference}'
      active_trusted_signers:
        value: '${aws_cloudfront_distribution.{{ name }}.active_trusted_signers}'
      hosted_zone_id:
        value: '${aws_cloudfront_distribution.{{ name }}.hosted_zone_id}'
      status:
        value: '${aws_cloudfront_distribution.{{ name }}.status}'
      arn:
        value: '${aws_cloudfront_distribution.{{ name }}.arn}'
      in_progress_validation_batches:
        value: '${aws_cloudfront_distribution.{{ name }}.in_progress_validation_batches}'
      domain_name:
        value: '${aws_cloudfront_distribution.{{ name }}.domain_name}'
